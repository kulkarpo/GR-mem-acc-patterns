"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var write_1 = require("./write");
var profiler = require('bindings')('sampling_heap_profiler');
var profiling = false;
function start(cfg) {
    if (!profiling) {
        if (cfg) {
            profiler.startSamplingHeapProfiler(cfg.sampleIntervalBytes, cfg.stackDepth);
        }
        else {
            profiler.startSamplingHeapProfiler();
        }
        profiling = true;
    }
}
exports.start = start;
function stop() {
    if (profiling) {
        profiler.stopSamplingHeapProfiler();
        profiling = false;
    }
}
exports.stop = stop;
function get() {
    if (!profiling) {
        throw new Error('get can only be called after profiler has been started');
    }
    return profiler.getAllocationProfile();
}
exports.get = get;
function write(filename, cb) {
    if (typeof filename === 'function') {
        cb = filename;
        filename = undefined;
    }
    var promise = profiling ? write_1.writeAsync(translateToDevtools(get()), filename) :
        Promise.reject(new Error('profiler not running'));
    if (cb) {
        promise.then(cb.bind(null, null)).catch(cb);
    }
    else {
        return promise;
    }
}
exports.write = write;
function translateToDevtools(node) {
    return {
        functionName: node.name,
        scriptId: node.scriptId,
        lineNumber: node.lineNumber,
        columnNumber: node.columnNumber,
        url: node.scriptName,
        selfSize: node.allocations.reduce(function (sum, alloc) {
            return sum + alloc.size * alloc.count;
        }, 0),
        children: node.children.map(translateToDevtools)
    };
}
//# sourceMappingURL=index.js.map